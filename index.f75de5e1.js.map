{"mappings":"AAAA;AAEA,SAAS,gBAAgB,IAAI;IAC3B,OAAO,CAAE,KAAK,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK;AAC9C;AAEA,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,MAAM,UAAU,SAAS,gBAAgB,CAAC;AAE1C,MAAM,YAAY;OAAI;CAAQ,CAAC,MAAM,CAAC;AAEtC,UAAU,GAAG;AAEb,UAAU,gBAAgB,CAAC,SAAS,CAAA;IAClC,OAAQ,EAAE,MAAM,CAAC,SAAS;QACxB,KAAK;YACH,UAAU,IAAI,CAAC,CAAC,WAAW;gBACzB,OAAO,gBAAgB,UAAU,QAAQ,CAAC,EAAE,CAAC,SAAS,IAClD,gBAAgB,UAAU,QAAQ,CAAC,EAAE,CAAC,SAAS,IAAI,IAAI;YAC7D;YACA;QAEF,KAAK;YACH,UAAU,IAAI,CAAC,CAAC,WAAW;gBACzB,OAAO,CAAC,UAAU,QAAQ,CAAC,EAAE,CAAC,SAAS,GACnC,CAAC,UAAU,QAAQ,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI;YAC7C;YACA;QAEF,KAAK;YACH,UAAU,IAAI,CAAC,CAAC,WAAW;gBACzB,OAAO,UAAU,QAAQ,CAAC,EAAE,CAAC,SAAS,CACnC,aAAa,CAAC,UAAU,QAAQ,CAAC,EAAE,CAAC,SAAS;YAClD;YACA;QAEF,KAAK;YACH,UAAU,IAAI,CAAC,CAAC,WAAW;gBACzB,OAAO,UAAU,QAAQ,CAAC,EAAE,CAAC,SAAS,CACnC,aAAa,CAAC,UAAU,QAAQ,CAAC,EAAE,CAAC,SAAS;YAClD;YACA;IACJ;IAEA,UAAU,SAAS,GAAG,CAAC;MACnB,EAAE,UAAU,GAAG,CAAC,CAAA,UAAW,CAAC;;cAEpB,EAAE,QAAQ,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;cAChC,EAAE,QAAQ,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;cAChC,EAAE,QAAQ,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;cAChC,EAAE,QAAQ,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;;MAExC,CAAC,EAAE,IAAI,CAAC,IAAI;IACd,CAAC;AACL","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nfunction convertToNumber(text) {\n  return +(text.replace('$', '').replace(',', ''));\n}\n\nconst tableHead = document.querySelector('thead');\n\nconst tableBody = document.querySelector('tbody');\n\nconst allRows = document.querySelectorAll('tr');\n\nconst employees = [...allRows].splice(1);\n\nemployees.pop();\n\ntableHead.addEventListener('click', e => {\n  switch (e.target.innerText) {\n    case 'Salary':\n      employees.sort((employee1, employee2) => {\n        return convertToNumber(employee1.children[3].innerText)\n          > convertToNumber(employee2.children[3].innerText) ? 1 : -1;\n      });\n      break;\n\n    case 'Age':\n      employees.sort((employee1, employee2) => {\n        return +employee1.children[2].innerText\n          > +employee2.children[2].innerText ? 1 : -1;\n      });\n      break;\n\n    case 'Position':\n      employees.sort((employee1, employee2) => {\n        return employee1.children[1].innerText\n          .localeCompare(employee2.children[1].innerText);\n      });\n      break;\n\n    case 'Name':\n      employees.sort((employee1, employee2) => {\n        return employee1.children[0].innerText\n          .localeCompare(employee2.children[0].innerText);\n      });\n      break;\n  }\n\n  tableBody.innerHTML = `\n      ${employees.map(element => `\n        <tr>\n          <td>${element.children[0].innerText}</td>\n          <td>${element.children[1].innerText}</td>\n          <td>${element.children[2].innerText}</td>\n          <td>${element.children[3].innerText}</td>\n        </tr>\n      `).join('')}\n    `;\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}